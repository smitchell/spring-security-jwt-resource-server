buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.6")
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


def webappDir = "$projectDir/src/main/webapp"

sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "buildAngular"
}

task buildAngular(type:Exec) {
	dependsOn "installAngular"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
//	outputs.dir "$webappDir/dist"
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build"
	} else {
		commandLine "ng", "build"
	}
}

task installAngular(type:Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
//	outputs.dir "$webappDir/dist"
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "npm.cmd", "install", "--no-optional", "--no-shrinkwrap"
	} else {
		commandLine "npm", "install", "--no-optional", "--no-shrinkwrap"
	}
}
